### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Convo {
  id: Int!
  memberOne: User
  memberOneId: Int!
  memberTwo: User
  memberTwoId: Int!
  messages: [Message]!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Delivery {
  deliveryBuilding: DeliveryBuilding
  deliveryBuildingPlaceId: Int!
  id: Int!
  orderStatus: String!
  resturant: Resturant
  resturantPlaceId: Int!
  user: User
  userId: Int!
}

type DeliveryBuilding {
  place: Place
  placeId: Int!
}

type Message {
  convo: Convo
  convoId: Int!
  createdAt: DateTime!
  id: Int!
  reciever: User
  recieverId: Int!
  sender: User
  senderId: Int!
  text: String!
}

type Mutation {
  createMessage(recieverId: Int!, senderId: Int!, text: String!): Message
  createPlace(city: String!, fullAddress: String!, googlePlaceId: String!, name: String!, state: String!, zipcode: Int!): Place
  login(email: String!, password: String!): User
  register(email: String!, firstName: String!, lastName: String!, password: String!): User
  toggleUserDeliveryStatus(delivering: Boolean!, id: Int!): User
  upsertDelivery(deliveryBuildingPlaceId: Int, orderStatus: String!, resturantPlaceId: Int, userId: Int!): Delivery
}

type Place {
  city: String!
  fullAddress: String!
  googlePlaceId: String!
  id: Int!
  name: String!
  state: String!
  zipcode: Int!
}

type Query {
  allDeliveries: [Delivery]!
  allUsers: [User!]!
  getConversation(recieverId: Int!, senderId: Int!): [Message]!
  getUserConversations(currentUserId: Int!): [Convo]!
}

type Resturant {
  place: Place
  placeId: Int!
}

type Subscription {
  newMessage(recieverId: Int!): Message
}

type User {
  dateCreated: DateTime!
  delivering: Boolean!
  email: String!
  emailVerified: Boolean!
  firstName: String!
  id: Int!
  lastName: String!
  password: String!
  picture: String
}